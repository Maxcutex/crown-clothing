{"ast":null,"code":"var _jsxFileName = \"/Users/enobassey/Projects/React/crown-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from '../collection/collection.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({});\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSnapshot();\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/enobassey/Projects/React/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","CollectionsOverview","WithSpinner","CollectionPage","updateCollections","firestore","convertCollectionsSnapshotToMap","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","componentWillUnmount","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAuB,aAAvB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;;AAEA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BU,KAF6B,GAErB;AACJC,MAAAA,OAAO,EAAE;AADL,KAFqB;AAAA,SAM7BC,uBAN6B,GAMH,IANG;AAAA;;AAQ7BC,EAAAA,iBAAiB,GAAE;AAAA,UACPP,iBADO,GACc,KAAKQ,KADnB,CACPR,iBADO;AAEf,UAAMS,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CACI,MAAMC,QAAN,IAAkB;AACjB,YAAMC,cAAc,GAAIX,+BAA+B,CAACU,QAAD,CAAvD;AACAZ,MAAAA,iBAAiB,CAACa,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc,EAAd;AACA,KALL;AAOH;;AACDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKT,uBAAL;AACH;;AACDU,EAAAA,MAAM,GAAG;AAAA,UACEC,KADF,GACW,KAAKT,KADhB,CACES,KADF;AAEL,WAAQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEJ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEA,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAErB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,EAGJ,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEoB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEnB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHI,CAAR;AAKH;;AA9B4B;;AAgCjC,MAAMoB,kBAAkB,GAAGC,QAAQ,KAAK;AACvCpB,EAAAA,iBAAiB,EAAEa,cAAc,IAAIO,QAAQ,CAACpB,iBAAiB,CAACa,cAAD,CAAlB;AADN,CAAL,CAAnC;;AAIA,eAAejB,OAAO,CAAC,IAAD,EAAOuB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React, { Component} from 'react'; \nimport { Route} from 'react-router-dom'\nimport { connect} from 'react-redux'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\nimport CollectionPage from '../collection/collection.component'\nimport { updateCollections } from '../../redux/shop/shop.actions'\n\nimport { firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\n\nclass ShopPage extends Component {\n\n    state = {\n        loading: true\n    }\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount(){\n        const { updateCollections} = this.props;\n        const collectionRef = firestore.collection('collections');\n\n        collectionRef.onSnapshot(\n            async snapshot => { \n             const collectionsMap =  convertCollectionsSnapshotToMap(snapshot);\n             updateCollections(collectionsMap)\n             this.setState({})\n            }\n        );\n    }\n    componentWillUnmount() {\n        this.unsubscribeFromSnapshot();\n    }\n    render() { \n        const {match} = this.props;\n        return (<div className=\"shop-page\">\n\n            <Route exact path={`${match.path}`} component={CollectionsOverview} />\n            <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n        </div>  );\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n \nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}