{"ast":null,"code":"import _objectSpread from \"/Users/enobassey/Projects/React/crown-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/enobassey/Projects/React/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","googleSignInSuccess","id","data","error","googleSignInFailure","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,kBAAvC,EAA2DC,kBAA3D,QAAoF,gBAApF;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAI;AAAA,iBACe,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CADrB;AAAA,UACOI,IADP,QACOA,IADP;;AAEA,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA2BG,IAA3B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACiB,mBAAmB;AAAEC,MAAAA,EAAE,EAAEH,YAAY,CAACG;AAAnB,OAA0BH,YAAY,CAACI,IAAb,EAA1B,EAApB,CAAT;AAEH,GAND,CAME,OAAMC,KAAN,EAAY;AACV,UAAMpB,GAAG,CAACqB,mBAAmB,CAACD,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC3D,MAAI;AAAA,kBAGI,MAAMjB,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAHV;AAAA,UAEIZ,IAFJ,SAEIA,IAFJ;;AAIA,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACM,kBAAkB;AACxBY,MAAAA,EAAE,EAAEH,YAAY,CAACG;AADO,OAErBH,YAAY,CAACI,IAAb,EAFqB,EAAnB,CAAT;AAKH,GAXD,CAWE,OAAOC,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAACO,kBAAkB,CAACa,KAAD,CAAnB,CAAT;AACH;AACJ;AACD,OAAO,UAAUO,mBAAV,GAA+B;AAClC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,oBAAjB,EAAwCjB,gBAAxC,CAAhB;AACH;AACD,OAAO,UAAUkB,kBAAV,GAA+B;AAClC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AACD,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACyB,mBAAD,CAAL,EAA4BzB,IAAI,CAAC2B,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types'\nimport { signInSuccess, signInFailure, emailSignInSuccess, emailSignInFailure} from './user.actions'\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'\n\nexport function* signInWithGoogle(){\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument,user); \n        const userSnapshot = yield userRef.get();\n        yield put(googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n\n    } catch(error){\n        yield put(googleSignInFailure(error))\n    }\n}\n\nexport function* signInWithEmail({payload: {email, password}}) {\n    try {\n        const {\n            user\n        } = yield auth.signInWithEmailAndPassword(email, password);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(emailSignInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }))\n\n    } catch (error) {\n        yield put(emailSignInFailure(error))\n    }\n}\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,  signInWithGoogle)\n}\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}