{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {} // collectionRef.get().then(snapshot => {\n  //         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //         dispatch(fetchCollectionsSuccess(collectionsMap));\n  //     })\n  //     .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/enobassey/Projects/React/crown-clothing/src/redux/shop/shop.saga.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SACIC,SADJ,EAEIC,+BAFJ,QAGO,+BAHP;AAKA,SACIC,uBADJ,EAC6BC,uBAD7B,QAEO,gBAFP;AAGA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,MAAI;AACA,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAkCO,QAAlC,CAAjC;AACA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AAEH,GAPD,CAQA,OAAMC,KAAN,EAAY,CAEX,CAXmC,CAcpC;AACA;AACA;AACA;AACA;;AAGH;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMf,SAAS,CACXO,eAAe,CAACS,sBADL,EAEXR,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects'\nimport {\n    firestore,\n    convertCollectionsSnapshotToMap\n} from '../../firebase/firebase.utils';\n\nimport {\n    fetchCollectionsSuccess, fetchCollectionsFailure\n} from './shop.actions'\nimport ShopActionTypes from './shop.types'\n\nexport function* fetchCollectionsAsync(){\n    try {\n        const collectionRef = firestore.collection('collections');\n\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n        yield put(fetchCollectionsSuccess(collectionsMap))\n\n    }\n    catch(error){\n\n    }\n    \n    \n    // collectionRef.get().then(snapshot => {\n    //         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //         dispatch(fetchCollectionsSuccess(collectionsMap));\n    //     })\n    //     .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTION_START,\n        fetchCollectionsAsync \n        );\n} "]},"metadata":{},"sourceType":"module"}