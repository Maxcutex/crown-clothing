{"ast":null,"code":"import _objectSpread from \"/Users/enobassey/Projects/React/crown-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n}; // export const clearItemFromCart = (cartItems, cartItemToClear) => {\n//     const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToClear.id);\n//     if (existingCartItem) {\n//         return cartItems.map(cartItem =>\n//             cartItem.id === cartItemToClear.id ?\n//             {\n//                 ...cartItem,\n//                 quantity: cartItem.quantity + 1\n//             } :\n//             cartItem\n//         )\n//     }\n//     return [...cartItems, {\n//         ...cartItemToClear,\n//         quantity: 1\n//     }]\n// }","map":{"version":3,"sources":["/Users/enobassey/Projects/React/crown-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity"],"mappings":";AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAgBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAcJ,aAAa,CAACI,EAAxD,CAAzB;;AAEA,MAAIH,gBAAJ,EAAqB;AACjB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAQ,IAC1BA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,qBACOD,QADP;AACiBG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAD/C,SAEEH,QAHC,CAAP;AAKH;;AACD,SAAO,CAAE,GAAGJ,SAAL,oBAAqBC,aAArB;AAAoCM,IAAAA,QAAQ,EAAE;AAA9C,KAAP;AACH,CAXM,C,CAaP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n    const existingCartItem = cartItems.find( cartItem => cartItem.id===cartItemToAdd.id);\n\n    if (existingCartItem){\n        return cartItems.map( cartItem =>\n            cartItem.id === cartItemToAdd.id\n            ? { ...cartItem, quantity: cartItem.quantity + 1}\n            : cartItem\n            )\n    }\n    return [ ...cartItems, { ...cartItemToAdd, quantity: 1}]\n}\n\n// export const clearItemFromCart = (cartItems, cartItemToClear) => {\n//     const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToClear.id);\n\n//     if (existingCartItem) {\n//         return cartItems.map(cartItem =>\n//             cartItem.id === cartItemToClear.id ?\n//             {\n//                 ...cartItem,\n//                 quantity: cartItem.quantity + 1\n//             } :\n//             cartItem\n//         )\n//     }\n//     return [...cartItems, {\n//         ...cartItemToClear,\n//         quantity: 1\n//     }]\n// }"]},"metadata":{},"sourceType":"module"}